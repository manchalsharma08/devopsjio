trigger:
- main

variables:
  ACR_NAME: 'myacr0216'                # Azure Container Registry name
  IMAGE_NAME: 'my-html-calculator'             # Docker image name
  IMAGE_TAG: 'v2'                  # Docker image tag
  AZURE_SUBSCRIPTION: 'humAzure'  # Azure Service Connection name

pool: default


stages:
- stage: BuildPipelineStage
  displayName: Build Stage
  jobs:
  - job: BuildPipelineJob
    displayName: Build job
    steps:
     - task: TerraformInstaller@1
       inputs:
         terraformVersion: 'latest'
  

     - script: |
         cd Environment\Dev
         terraform init
         terraform fmt
         terraform validate

         terraform plan
    
- stage: ImageAcrFactchstage
  displayName: Image Fatch to ACR stage
  jobs:
  - job: ImageACRFatchJob
    displayName: Image Fatchto ACR Job
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'ACR-K8S-SC-Devopsjio'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'             # Step 1: Azure CLI Login
        inlineScript: |
          echo "Logging into Azure..."
          az account show
        powerShellErrorActionPreference: 'continue'

     # Step 2: Login to Azure Container Registry

    - script: |                                   
        echo "Logging into ACR: $(ACR_NAME)"
        az acr login --name $(ACR_NAME)

    # Step 3: Fetch the Docker Image

    - script: |
        echo "Pulling image: $(IMAGE_NAME):$(IMAGE_TAG)"
        docker pull $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)
        displayName: "Fetch Docker Image from ACR"

    # Step 4: Verify the Image
    - script: |
        echo "Verifying pulled images..."
        docker images | grep $(IMAGE_NAME)
        displayName: "Verify Docker Image"

# stages:
# - stage: initAndPlanStage
#   displayName: "Stage for init And Plan work"
#   jobs:
#   - job: initAndPlanJob
#     displayName: "Job for init And Plan work"
#     steps:
#      - task: TerraformInstaller@1
#        inputs:
#          terraformVersion: 'latest'
#      - task: TerraformTaskV4@4
#        inputs:
#          provider: 'azurerm'
#          command: 'init'
#          backendServiceArm: 'ACR-K8S-SC'
#          backendAzureRmResourceGroupName: 'devops-rg'
#          backendAzureRmStorageAccountName: 'devopsstorage98765487879'
#          backendAzureRmContainerName: 'devops-con'
#          backendAzureRmKey: 'vineet.terraform.tfstate'
#      - task: TerraformTaskV4@4
#        inputs:
#          provider: 'azurerm'
#          command: 'plan'
#          environmentServiceNameAzureRM: 'ACR-K8S-SC'

# - stage: muanualvalidationStage
#   displayName: " Stage for manual validation"
#   jobs:
#   - job: manualValidationJob
#     displayName: "Job for manual validation work"
#     pool: server
#     steps:
#      - task: ManualValidation@1
#        inputs:
#          notifyUsers: '@vineet'
#          approvers: '@vineet'
#          instructions: 'need to approve'

# - stage: applyStage
#   displayName: "Stage for apply work"
#   jobs:
#   - job: ApplyJob
#     displayName: "Job for terraform Apply work"
#     steps:
#      - task: TerraformTaskV4@4
#        inputs:
#          provider: 'azurerm'
#          command: 'apply'
#          commandOptions: '-auto-approve'
#          environmentServiceNameAzureRM: 'ACR-K8S-SC'

     

